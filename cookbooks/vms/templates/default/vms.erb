################################################################################
# This config file has been automatically generated by chef. Any changes made  #
# to it will be overwritten if chef client is run.                             #
################################################################################

#
# vms
#
# This script is sourced by some vms wrapper xenguest-vms and kvm-vms, as well
# as by the Gridcentric Openstack nova extension. It contains simple key=value
# pairs.


# The username or uid of the user that should have access to vms's runtime files
# (VMS_SHELF_PATH, VMS_LOGS, VMS_CACHE, and VMS_STORE). Generally, this is the
# user that runs virtual-machine related processes on the host (i.e., the user
# that runs qemu when you're using kvm and the user that runs xenguest when
# you're using xen).
#
# The permissions of vms's runtime files are enforced (i.e., chown / chmod will
# be called on these directories!), so ensure that they're subdirectories of
# standard Linux paths, unless you want /tmp to be chown'd! For example, use
# /tmp/vms instead of /tmp.
#
# VMS_USER is set automatically when the integration packages are installed
# (i.e, vms-libvirt and vms-xapi).
#
<% if @vms_user.nil? -%>
#VMS_USER=
<% else -%>
VMS_USER=<%= @vms_user %>
<% end -%>

# The group that should have access to vms's runtime files. If omitted, the gid
# of VMS_USER is used.
#
<% if @vms_group.nil? -%>
#VMS_GROUP=
<% else -%>
VMS_GROUP=<%= @vms_group %>
<% end -%>

# The location of the shelf (local metadata). Small file requiring fast random
# access (preferably tmpfs or SSD). Note that ubuntu distros mount tmpfs on
# /run/shm.
VMS_SHELF_PATH=<%= @vms_shelf_path %>

# This is the default directory for large shared state. Currently,
# this is used when saving memory and disk snapshots, as well as descriptors.
# Unlike the VMS_STORE below, this should be consistent across hosts.
VMS_SHARED_PATH=<%= @vms_shared_path %>

# When blessing, disks are saved to this URL. In its absense, disks are
# saved to VMS_SHARED_PATH. Supported protocols are
#   Format                          Example
#   <path>                          /var/gridcentric
#   rbd:<pool>[/prefix]             rbd:rbd/vms-
#   * The domain ID is appended to the given URL, plus a disk enumeration.
<% if @vms_disk_url.nil? -%>
#VMS_DISK_URL=/var/gridcentric
<% else -%>
VMS_DISK_URL=<%= @vms_disk_url %>
<% end -%>

# URL to bless memory to. If absent, then memory is saved to the descriptor file.
#   Format                          Example
#   rados://pool[/prefix]           rados://vms/id-
#   * The domain ID is appended to the given URL.
<% if @vms_memory_url.nil? -%>
#VMS_MEMORY_URL=rados://vms
<% else -%>
VMS_MEMORY_URL=<%= @vms_memory_url %>
<% end -%>

# This is the default log file directory.
# Files are created for each domain in the form '<command>.<id>.log'.
VMS_LOGS=<%= @vms_logs %>

# Create a single log file in VMS_LOGS called 'vms.log' instead of
# '<command>.<id>.log'? Default value is false.
<% if @vms_single_log.nil? -%>
# VMS_SINGLE_LOG=false
<% else -%>
VMS_SINGLE_LOG=<%= @vms_single_log %>
<% end -%>

# This is the default directory for cached and shared state (small files
# requiring fast random access).  This should generally be tmpfs, an SSD or
# fast local disk.
VMS_CACHE=<%= @vms_cache %>

# This is the default directory for larger private (on-disk) state.
# For example the paging file used when eviction.paging=1 is placed here.
# Choose it carefully: you may want to link this with a larger storage
# repository and use it to also store the descriptors. However, using shared
# storage for this private state may result in unnecessary network traffic.
# NOTE: If this is not provided, the base location of the descriptor path
# will be used instead.
<% if @vms_store.nil? -%>
# VMS_STORE=/data
<% else -%>
VMS_STORE=<%= @vms_store %>
<% end -%>

# VMSD_OPTS is appended to the vmsd command line.
# This is for advanced users and debugging purposes only.
# You may include multiple key-value pairs here, separated with spaces.
VMSD_OPTS=<%= @vmsd_opts %>

# Determines if verbose debugging messages are printed; 0 disables, 1 enables.
VMS_DEBUG=<%= @vms_debug %>

# When launching cloned virtual machines, a number of key-value pairs can be
# provided to the launched guest as per-instance parameters. They are encoded
# as a json-dictionary. The key-value pairs below will be applied to all clones
# launched ont his host (on top of per-instance key-value pairs specified
# through the command line with the --params switch).  Multiple pairs can be
# specified, by separating them with spaces. Note that in case of conflict, the
# params specified here will be overriden by params specified through the
# command line.
<% if @vms_guest_params.nil? -%>
#VMS_GUEST_PARAMS=
<% else -%>
VMS_GUEST_PARAMS=<%= @vms_guest_params %>
<%end -%>

# Location of ceph configuration file. Only used by libvirt module. If omitted,
# then the default ceph path is used (/etc/ceph/ceph.conf):
<% if @vms_ceph_conf.nil? -%>
#VMS_CEPH_CONF=/etc/ceph/ceph.conf
<% else -%>
VMS_CEPH_CONF=<%= @vms_ceph_conf %>
<% end -%>

# Login to be used when authenticating to ceph. If omitted, then the default
# ceph login (admin) is used:
<% if @vms_ceph_login.nil? -%>
#VMS_CEPH_LOGIN=admin
<% else -%>
VMS_CEPH_LOGIN=<%= @vms_ceph_login %>
<% end -%>

# Force a CPU model. Only set if you have a heterogeneous cluster. Use the lowest
# common denominator. See /usr/share/libvirt/cpu_map.xml for model names. A safe
# example is kvm64.
<% if @vms_qemu_cpu_model.nil? -%>
#VMS_QEMU_CPU_MODEL=
<% else -%>
VMS_QEMU_CPU_MODEL=<%= @vms_qemu_cpu_model %>
<% end -%>

